import { defineComponent as f, computed as c, openBlock as i, createElementBlock as d, normalizeClass as l, toDisplayString as k, resolveComponent as S, Fragment as L, renderList as B, renderSlot as D, createBlock as N, createElementVNode as y, ref as I, createVNode as $, createSlots as O, withCtx as j, createTextVNode as q, createCommentVNode as T } from "vue";
const E = f({
  name: "meetingsDisplay",
  props: {
    meetingSlot: {
      type: Object,
      required: !0
    },
    meetingSlotSelected: {
      type: [Array, Object, null],
      required: !0
    },
    meetingButtonClass: {
      type: String,
      default: ""
    },
    meetingEmptyClass: {
      type: String,
      default: ""
    }
  },
  emits: ["meeting-slot-click"],
  setup(e, t) {
    const n = c(() => {
      const a = new Date(e.meetingSlot.date), r = a.getHours() < 10 ? `0${a.getHours()}` : a.getHours(), m = a.getMinutes() < 10 ? `0${a.getMinutes()}` : a.getMinutes();
      return `${r}:${m}`;
    }), s = c(() => {
      if (Array.isArray(e.meetingSlotSelected)) {
        const a = new Date(e.meetingSlot.date).getTime();
        for (const r of e.meetingSlotSelected)
          if (new Date(r.date).getTime() === a)
            return !0;
        return !1;
      }
      if (e.meetingSlotSelected && e.meetingSlotSelected.date) {
        const a = new Date(e.meetingSlotSelected.date), r = new Date(e.meetingSlot.date);
        return a.getTime() === r.getTime();
      }
      return !1;
    });
    return {
      meetingClass: c(() => ({
        [e.meetingButtonClass]: !0,
        "meeting__button--selected": s.value
      })),
      time: n,
      meetingSlotClick: () => {
        t.emit("meeting-slot-click", e.meetingSlot);
      }
    };
  }
});
const C = (e, t) => {
  const n = e.__vccOpts || e;
  for (const [s, g] of t)
    n[s] = g;
  return n;
}, F = { class: "meeting" }, H = ["disabled"];
function U(e, t, n, s, g, p) {
  return i(), d("div", F, [
    e.meetingSlot.date ? (i(), d("button", {
      key: 0,
      type: "button",
      class: l(["meeting__button", e.meetingClass]),
      disabled: !e.meetingSlot.date,
      onClick: t[0] || (t[0] = (...a) => e.meetingSlotClick && e.meetingSlotClick(...a))
    }, k(e.time), 11, H)) : (i(), d("div", {
      key: 1,
      class: l(["meeting__empty", e.meetingEmptyClass])
    }, " \u2014 ", 2))
  ]);
}
const z = /* @__PURE__ */ C(E, [["render", U], ["__scopeId", "data-v-99e55f0d"]]), Y = f({
  name: "MeetingsList",
  components: {
    MeetingDisplay: z
  },
  props: {
    meetingsDay: {
      type: Object,
      default: null
    },
    meetingSlotSelected: {
      type: [Array, Object, null],
      required: !0
    },
    meetingClass: {
      type: String,
      default: ""
    },
    meetingButtonClass: {
      type: String,
      default: ""
    },
    meetingEmptyClass: {
      type: String,
      default: ""
    }
  },
  emits: ["meeting-slot-click"],
  setup(e, t) {
    return {
      meetingSlotClick: (s) => {
        t.emit("meeting-slot-click", s);
      }
    };
  }
});
const G = { class: "meetings" };
function J(e, t, n, s, g, p) {
  const a = S("meeting-display");
  return i(), d("div", G, [
    e.$slots.meeting ? (i(!0), d(L, { key: 0 }, B(e.meetingsDay.slots, (r, m) => (i(), d("div", { key: m }, [
      D(e.$slots, "meeting", { meeting: r }, void 0, !0)
    ]))), 128)) : (i(!0), d(L, { key: 1 }, B(e.meetingsDay.slots, (r, m) => (i(), N(a, {
      class: l(e.meetingClass),
      "meeting-button-class": e.meetingButtonClass,
      "meeting-empty-class": e.meetingEmptyClass,
      "meeting-slot": r,
      "meeting-slot-selected": e.meetingSlotSelected,
      onMeetingSlotClick: e.meetingSlotClick,
      key: m
    }, null, 8, ["class", "meeting-button-class", "meeting-empty-class", "meeting-slot", "meeting-slot-selected", "onMeetingSlotClick"]))), 128))
  ]);
}
const K = /* @__PURE__ */ C(Y, [["render", J], ["__scopeId", "data-v-59393793"]]), Q = f({
  name: "DayDisplay",
  props: {
    meetingsDay: {
      type: Object,
      required: !0
    },
    daysLabel: {
      type: Array,
      required: !0
    },
    monthsLabel: {
      type: Array,
      required: !0
    }
  },
  setup(e) {
    const t = c(() => {
      const s = new Date(e.meetingsDay.date);
      return e.daysLabel[s.getDay()];
    }), n = c(() => {
      const s = new Date(e.meetingsDay.date);
      return `${s.getDate()} ${e.monthsLabel[s.getMonth()]}`;
    });
    return {
      title: t,
      subtitle: n
    };
  }
});
const R = { class: "day" }, W = { class: "day__title" }, X = { class: "day__subtitle" };
function Z(e, t, n, s, g, p) {
  return i(), d("div", R, [
    y("div", W, k(e.title), 1),
    y("div", X, k(e.subtitle), 1)
  ]);
}
const x = /* @__PURE__ */ C(Q, [["render", Z], ["__scopeId", "data-v-11f9b4ca"]]), ee = f({
  name: "ArrowIcon",
  props: {
    direction: {
      type: String,
      default: "right"
    }
  },
  setup(e) {
    return {
      iconDirectionClass: c(() => `vms-icon-${e.direction}`)
    };
  }
});
function te(e, t, n, s, g, p) {
  return i(), d("i", {
    class: l(["vms-icon", e.iconDirectionClass])
  }, null, 2);
}
const se = /* @__PURE__ */ C(ee, [["render", te], ["__scopeId", "data-v-6ce31d85"]]), ne = f({
  name: "SpinLoader"
});
const ae = { class: "vms-icon-loader" };
function ie(e, t, n, s, g, p) {
  return i(), d("i", ae);
}
const oe = /* @__PURE__ */ C(ne, [["render", ie], ["__scopeId", "data-v-a175ea8d"]]), le = [
  "sunday",
  "monday",
  "tuesday",
  "wednesday",
  "thursday",
  "friday",
  "saturday"
], de = [
  "jan.",
  "feb.",
  "mar.",
  "apr.",
  "may.",
  "jun.",
  "jul.",
  "aug.",
  "sep.",
  "oct.",
  "nov.",
  "dec."
], P = (e) => {
  const t = e.getMonth() + 1 < 10 ? `0${e.getMonth() + 1}` : e.getMonth() + 1, n = e.getDate() < 10 ? `0${e.getDate()}` : e.getDate();
  return parseInt(`${e.getFullYear()}${t}${n}`, 10);
}, ue = (e) => {
  const t = new Date(e), n = new Date();
  return P(t) <= P(n);
}, re = {
  daysLabel: le,
  monthsLabel: de,
  limit: 4,
  spacing: 4,
  loadingLabel: "Loading ...",
  disabledDate: ue
}, ge = {
  tabClass: "",
  tabPaginationPrevious: "",
  tabPaginationPreviousButton: "",
  tabPaginationNext: "",
  tabPaginationNextButton: "",
  tabPaginationUpButton: "",
  tabPaginationDownButton: "",
  tabDays: "",
  tabDayDisplay: "",
  tabMeetings: "",
  tabMeeting: "",
  tabMeetingButton: "",
  tabMeetingEmpty: "",
  tabLoading: ""
}, me = f({
  name: "meetingSelector",
  components: {
    Meetings: K,
    DayDisplay: x,
    ArrowIcon: se,
    Loader: oe
  },
  props: {
    modelValue: {
      type: [Array, Object, null],
      required: !0
    },
    date: {
      type: Date,
      required: !0
    },
    meetingsDays: {
      type: Array,
      required: !0
    },
    calendarOptions: {
      type: Object,
      default: () => ({})
    },
    classNames: {
      type: Object,
      default: () => ({})
    },
    loading: {
      type: Boolean,
      default: !1
    },
    multi: {
      type: Boolean,
      default: !1
    }
  },
  emits: [
    "previous-date",
    "next-date",
    "meeting-slot-selected",
    "change",
    "meeting-slot-unselected",
    "update:modelValue"
  ],
  setup(e, t) {
    const n = I(0), s = c(() => ({
      ...re,
      ...e.calendarOptions
    })), g = c(() => ({
      ...ge,
      ...e.classNames
    })), p = c(() => e.meetingsDays && e.meetingsDays.length ? Math.max(...e.meetingsDays.map((u) => u.slots.length)) : 0), a = c(() => {
      const u = Math.ceil(p.value / s.value.limit) * s.value.limit;
      return e.meetingsDays ? e.meetingsDays.map((_) => {
        const v = new Array(u).fill({ date: "" });
        return v.splice(0, _.slots.length, ..._.slots), {
          ..._,
          slots: v.slice(n.value, n.value + s.value.limit)
        };
      }) : [];
    }), r = c(() => {
      const { daysLabel: u } = s.value;
      return e.meetingsDays ? e.meetingsDays.map((_) => {
        const v = new Date(_.date);
        return u[v.getDay()];
      }) : [];
    }), m = () => {
      n.value += s.value.spacing;
    }, h = () => {
      n.value -= s.value.spacing;
    }, o = () => {
      t.emit("previous-date");
    }, M = () => {
      t.emit("next-date");
    }, w = (u) => u + 1 === a.value.length ? `tab__days--last ${g.value.tabMeetings}` : g.value.tabMeetings || "", V = (u) => {
      if (e.multi && Array.isArray(e.modelValue)) {
        const _ = new Date(u.date).getTime(), v = e.modelValue.findIndex((A) => new Date(A.date).getTime() === _), b = [...e.modelValue];
        v !== -1 ? (b.splice(v, 1), t.emit("change", b), t.emit("meeting-slot-selected", b), t.emit("update:modelValue", b)) : (b.push(u), t.emit("change", b), t.emit("meeting-slot-selected", b), t.emit("update:modelValue", b));
        return;
      }
      if (e.modelValue) {
        const _ = new Date(u.date);
        if (new Date(e.modelValue.date).getTime() === _.getTime()) {
          t.emit("change", void 0), t.emit("meeting-slot-unselected"), t.emit("update:modelValue");
          return;
        }
      }
      t.emit("change", u), t.emit("meeting-slot-selected", u), t.emit("update:modelValue", u);
    };
    return t.expose({
      nextMeetings: m,
      previousMeetings: h,
      previousDate: o,
      nextDate: M,
      meetingSlotClick: V
    }), {
      skip: n,
      options: s,
      cssClass: g,
      tabDaysClass: w,
      maxNbMeetings: p,
      meetingsByDays: a,
      days: r,
      nextMeetings: m,
      previousMeetings: h,
      previousDate: o,
      nextDate: M,
      meetingSlotClick: V
    };
  }
});
const ce = { class: "meeting-selector" }, ye = ["disabled"], pe = { class: "tab__days" }, _e = {
  key: 1,
  class: "tab__loading__text"
}, be = ["disabled"], ve = ["disabled"], De = ["disabled"];
function $e(e, t, n, s, g, p) {
  const a = S("arrow-icon"), r = S("day-display"), m = S("meetings"), h = S("loader");
  return i(), d("div", ce, [
    y("div", {
      class: l([e.cssClass.tabClass, "tab"])
    }, [
      y("div", {
        class: l(["tab__pagination", e.cssClass.tabPaginationPrevious])
      }, [
        D(e.$slots, "button-previous", {}, () => [
          y("button", {
            type: "button",
            disabled: e.options.disabledDate(e.date) || e.loading,
            class: l(["tab__pagination__button", e.cssClass.tabPaginationPreviousButton]),
            onClick: t[0] || (t[0] = (...o) => e.previousDate && e.previousDate(...o))
          }, [
            $(a, { direction: "left" })
          ], 10, ye)
        ], !0)
      ], 2),
      y("div", pe, [
        (i(!0), d(L, null, B(e.meetingsByDays, (o, M) => (i(), d("div", {
          class: l(["tab__day", e.tabDaysClass(M)]),
          key: String(o.date)
        }, [
          D(e.$slots, "header", { meetings: o }, () => [
            $(r, {
              class: l(["tab__days__day-display", e.cssClass.tabDayDisplay]),
              "meetings-day": o,
              "months-label": e.options.monthsLabel,
              "days-label": e.options.daysLabel
            }, null, 8, ["class", "meetings-day", "months-label", "days-label"])
          ], !0),
          $(m, {
            class: l(["tab__days__meetings", e.cssClass.tabMeetings]),
            "meeting-class": e.cssClass.tabMeeting,
            "meeting-button-class": e.cssClass.tabMeetingButton,
            "meeting-empty-class": e.cssClass.tabMeetingEmpty,
            "meetings-day": o,
            "meeting-slot-selected": e.modelValue,
            onMeetingSlotClick: e.meetingSlotClick
          }, O({ _: 2 }, [
            e.$slots.meeting ? {
              name: "meeting",
              fn: j(({ meeting: w }) => [
                D(e.$slots, "meeting", { meeting: w }, void 0, !0)
              ]),
              key: "0"
            } : void 0
          ]), 1032, ["class", "meeting-class", "meeting-button-class", "meeting-empty-class", "meetings-day", "meeting-slot-selected", "onMeetingSlotClick"])
        ], 2))), 128)),
        e.loading ? (i(), d("div", {
          key: 0,
          class: l(["tab__loading", e.cssClass.tabLoading])
        }, [
          e.$slots.loading ? D(e.$slots, "loading", { key: 0 }, void 0, !0) : (i(), d("div", _e, [
            $(h),
            q(" " + k(e.options.loadingLabel), 1)
          ]))
        ], 2)) : T("", !0)
      ]),
      y("div", {
        class: l(["tab__pagination", e.cssClass.tabPaginationNext])
      }, [
        D(e.$slots, "button-next", {}, () => [
          y("button", {
            type: "button",
            class: l(["tab__pagination__button tab__pagination__button--right", e.cssClass.tabPaginationNextButton]),
            disabled: e.loading,
            onClick: t[1] || (t[1] = (...o) => e.nextDate && e.nextDate(...o))
          }, [
            $(a, { direction: "right" })
          ], 10, be)
        ], !0),
        D(e.$slots, "button-up", {
          isDisabled: e.skip === 0 || e.loading
        }, () => [
          y("button", {
            type: "button",
            class: l([e.cssClass.tabPaginationUpButton, "tab__pagination__button tab__pagination__button--up"]),
            disabled: e.skip === 0 || e.loading,
            onClick: t[2] || (t[2] = (...o) => e.previousMeetings && e.previousMeetings(...o))
          }, [
            $(a, { direction: "up" })
          ], 10, ve)
        ], !0),
        D(e.$slots, "button-down", {
          isDisabled: e.skip + e.options.spacing >= e.maxNbMeetings || e.loading
        }, () => [
          y("button", {
            type: "button",
            class: l([e.cssClass.tabPaginationDownButton, "tab__pagination__button tab__pagination__button--down"]),
            disabled: e.skip + e.options.spacing >= e.maxNbMeetings || e.loading,
            onClick: t[3] || (t[3] = (...o) => e.nextMeetings && e.nextMeetings(...o))
          }, [
            $(a, { direction: "down" })
          ], 10, De)
        ], !0)
      ], 2)
    ], 2)
  ]);
}
const Se = /* @__PURE__ */ C(me, [["render", $e], ["__scopeId", "data-v-adda00da"]]);
export {
  Se as default
};
